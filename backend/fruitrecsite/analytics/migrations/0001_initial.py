# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-27 00:30
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Mission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drone_ssid', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='NavData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='NavDataSet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.Mission')),
            ],
        ),
        migrations.CreateModel(
            name='AcceleroPhysData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('phys_accs', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('phys_gyros', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('alim_3v3', models.IntegerField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='AcceleroRawData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('raw_accs', django.contrib.postgres.fields.ArrayField(base_field=models.PositiveIntegerField(), size=3)),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='AltitudeData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('altitude_vision', models.IntegerField()),
                ('altitude_vz', models.FloatField()),
                ('altitude_ref', models.IntegerField()),
                ('altitude_raw', models.IntegerField()),
                ('obs_acc_z', models.FloatField()),
                ('obs_alt', models.FloatField()),
                ('obs_x', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('obs_state', models.IntegerField()),
                ('est_vb', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=2)),
                ('est_state', models.IntegerField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='AttitudeData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('theta', models.FloatField()),
                ('phi', models.FloatField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='BatteryVoltageData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('voltage', models.IntegerField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='FlightStatusData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('state', models.IntegerField()),
                ('vision', models.IntegerField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='GPSData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('latitude', models.DecimalField(decimal_places=13, max_digits=16)),
                ('longitude', models.DecimalField(decimal_places=13, max_digits=16)),
                ('latitude_zero', models.DecimalField(decimal_places=13, max_digits=16)),
                ('longitude_zero', models.DecimalField(decimal_places=13, max_digits=16)),
                ('latitude_fused', models.DecimalField(decimal_places=13, max_digits=16)),
                ('longitude_fused', models.DecimalField(decimal_places=13, max_digits=16)),
                ('attitude_fused', models.DecimalField(decimal_places=13, max_digits=16)),
                ('elevation', models.DecimalField(decimal_places=12, max_digits=16)),
                ('hdop', models.DecimalField(decimal_places=12, max_digits=16)),
                ('data_available', models.IntegerField()),
                ('zero_validated', models.BooleanField()),
                ('wpt_validated', models.BooleanField()),
                ('gps_state', models.IntegerField()),
                ('x_trajectory', models.FloatField()),
                ('y_trajectory', models.FloatField()),
                ('x_reference', models.FloatField()),
                ('y_reference', models.FloatField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='GyroOffsetData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('offset_g', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='GyroPhysData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('gyro_temp', models.IntegerField()),
                ('phys_gyros', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('alim_3v3', models.IntegerField()),
                ('vref_epson', models.IntegerField()),
                ('vref_idg', models.IntegerField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='GyroRawData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('raw_gyros', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=3)),
                ('raw_gyros_110', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=2)),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='MagnetoData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('m', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), size=3)),
                ('m_raw', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('m_rectified', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('m_underscore', django.contrib.postgres.fields.ArrayField(base_field=models.FloatField(), size=3)),
                ('heading_unwrapped', models.FloatField()),
                ('heading_gyro_unwrapped', models.FloatField()),
                ('heading_fusion_unwrapped', models.FloatField()),
                ('calibration_ok', models.BinaryField()),
                ('state', models.IntegerField()),
                ('radius', models.FloatField()),
                ('error_mean', models.FloatField()),
                ('error_var', models.FloatField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.CreateModel(
            name='TimeData',
            fields=[
                ('navdata_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='analytics.NavData')),
                ('seconds', models.IntegerField()),
                ('u_seconds', models.IntegerField()),
            ],
            bases=('analytics.navdata',),
        ),
        migrations.AddField(
            model_name='navdata',
            name='nav_data_set',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='analytics.NavDataSet'),
        ),
    ]
